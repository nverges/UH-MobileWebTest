{"version":3,"sources":["../../src/pages/create-new-post/create-new-post.ts","../../src/pages/user-posts/user-posts.ts","../../node_modules/@angular/core/esm5 lazy","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/app/app.component.ts","../../src/providers/rest/rest.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController } from 'ionic-angular';\n\n// Providers\nimport { RestProvider } from '../../providers/rest/rest';\n\n/**\n * Generated class for the CreateNewPostPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-create-new-post',\n  templateUrl: 'create-new-post.html',\n})\nexport class CreateNewPostPage {\n\n  posts: any;\n  title: any;\n  body: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public restProvider: RestProvider) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('CreateNewPostPage loaded');\n  }\n\n  // Save Post (not yet functioning)\n  savePost() {\n    // New Post object\n    let newItem = {\n      title: this.title,\n      body: this.body,\n    };\n    // { need to post to DB }\n    this.viewCtrl.dismiss(newItem);\n  }\n\n  // Close View\n  close() {\n    this.viewCtrl.dismiss();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/create-new-post/create-new-post.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ViewController, ModalController } from 'ionic-angular';\n\n// HTTP\nimport { RestProvider } from '../../providers/rest/rest';\n\n// Pages\nimport { CreateNewPostPage } from '../create-new-post/create-new-post';\n\nimport _ from 'lodash';\n\n/**\n * Generated class for the UserPostsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-user-posts',\n  templateUrl: 'user-posts.html',\n})\nexport class UserPostsPage {\n\n  // variables\n  username: any;\n  posts: any;\n  userId: any;\n  title: any;\n  body: any;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, public viewCtrl: ViewController, public restProvider: RestProvider, public modalCtrl: ModalController) {\n\n  }\n\n  ionViewDidLoad() {\n    console.log('UserPostsPage loaded');\n    console.log(this.navParams.get('user'));\n\n    this.getUserPosts(this.navParams.get('user').id);\n    this.username = this.navParams.get('user').username;\n    this.title = this.navParams.get('user').title;\n    this.body = this.navParams.get('user').body;\n    this.userId = this.navParams.get('user').userId;\n  }\n\n  // Get users posts by ID\n  getUserPosts(id) {\n    this.restProvider.getUserPosts(id)\n    .then(data => {\n\n      // entire data object\n      console.log(data);\n\n      // filter for specific user\n      this.posts = _.filter(data, { userId: id});\n      console.log(this.posts);\n    });\n  }\n\n  // Display Create New Post Page in Modal\n  displayModal() {\n    let modal = this.modalCtrl.create(CreateNewPostPage);\n    modal.present();\n  }\n\n  // Close View\n  close() {\n    this.viewCtrl.dismiss();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/user-posts/user-posts.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 114;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 114\n// module chunks = 2","var map = {\n\t\"../pages/create-new-post/create-new-post.module\": [\n\t\t282,\n\t\t1\n\t],\n\t\"../pages/user-posts/user-posts.module\": [\n\t\t283,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 156;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 156\n// module chunks = 2","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\nimport { RestProvider } from '../../providers/rest/rest';\n\n// Modal\nimport { ModalController } from 'ionic-angular';\n\n// Pages\nimport { UserPostsPage } from '../user-posts/user-posts';\n\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html'\n})\nexport class HomePage {\n\n  users: any;\n\n  constructor(public navCtrl: NavController, public restProvider: RestProvider, public modalCtrl: ModalController) {\n    this.getUsers();\n  }\n\n  ionViewDidLoad() {\n    console.log('HomePage loaded');\n  }\n\n  // Get all users\n  getUsers() {\n    this.restProvider.getUsers()\n    .then(data => {\n      this.users = data;\n    });\n  }\n\n  // Click event to display user posts page\n  viewPosts(user) {\n    this.navCtrl.push(UserPostsPage, {\n      user\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { ErrorHandler, NgModule } from '@angular/core';\nimport { IonicApp, IonicErrorHandler, IonicModule } from 'ionic-angular';\nimport { SplashScreen } from '@ionic-native/splash-screen';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { MyApp } from './app.component';\n\n// Pages\nimport { HomePage } from '../pages/home/home';\nimport { UserPostsPage } from '../pages/user-posts/user-posts';\nimport { CreateNewPostPage } from '../pages/create-new-post/create-new-post';\n\n// Providers\nimport { RestProvider } from '../providers/rest/rest';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HomePage,\n    UserPostsPage,\n    CreateNewPostPage\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    IonicModule.forRoot(MyApp)\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HomePage,\n    UserPostsPage,\n    CreateNewPostPage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},\n    RestProvider\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\nimport { Platform } from 'ionic-angular';\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\nimport { HomePage } from '../pages/home/home';\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  rootPage:any = HomePage;\n\n  constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n    platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      statusBar.styleDefault();\n      splashScreen.hide();\n    });\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n/*\n  Generated class for the RestProvider provider.\n\n  See https://angular.io/guide/dependency-injection for more info on providers\n  and Angular DI.\n*/\n@Injectable()\nexport class RestProvider {\n\n  apiUrl = 'http://jsonplaceholder.typicode.com';\n\n  constructor(public http: HttpClient) {\n    console.log('RestProvider loaded');\n  }\n\n  // Get list of all users\n  getUsers() {\n    return new Promise(resolve => {\n      this.http.get(this.apiUrl+'/users').subscribe(data => {\n        resolve(data);\n      }, err => {\n        console.log(err);\n      });\n    });\n  }\n\n  // Get posts from specific user\n  getUserPosts(id) {\n    return new Promise(resolve => {\n      this.http.get(this.apiUrl+'/posts?userID='+id).subscribe(data => {\n        resolve(data);\n      }, err=> {\n        console.log(err);\n      });\n    });\n  }\n\n  // Add new post\n  addPost(data) {\n    return new Promise((resolve, reject) => {\n      this.http.post(this.apiUrl+'/posts', JSON.stringify(data))\n        .subscribe(res => {\n          resolve(res);\n        }, (err) => {\n          reject(err);\n        });\n    });\n  }\n\n  // Edit post\n  editPost(post) {\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/rest/rest.ts"],"sourceRoot":""}